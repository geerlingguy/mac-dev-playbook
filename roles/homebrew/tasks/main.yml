---
# tasks file for homebrew

- name: Check if Homebrew is installed
  ansible.builtin.shell: 
    cmd: which brew
  register: brew_path
  ignore_errors: true
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/local/bin:/opt/homebrew/bin"

- name: Fail if Homebrew is not installed
  ansible.builtin.fail:
    msg: "Homebrew is not installed. Exiting playbook. Run the following command on your target Mac: $ /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\""
  when: brew_path.rc != 0

- block:
       
  - name: Add /opt/homebrew/bin to PATH in .zshrc
    lineinfile:
      path: "{{ ansible_env.HOME }}/.zshrc"
      line: 'export PATH="/opt/homebrew/bin:$PATH"'
      create: yes
    when: ansible_env.SHELL.endswith('zsh')

  - name: Add /opt/homebrew/bin to PATH in .bash_profile
    lineinfile:
      path: "{{ ansible_env.HOME }}/.bash_profile"
      line: 'export PATH="/opt/homebrew/bin:$PATH"'
      create: yes
    when: ansible_env.SHELL.endswith('bash')

  - name: Add /opt/homebrew/bin to system-wide PATH
    lineinfile:
      path: /etc/paths
      line: '/opt/homebrew/bin'
      state: present
    become: yes

  - name: Install Homebrew casks
    community.general.homebrew_cask:
      name: "{{ item }}"
      state: present
      sudo_password: "{{ ansible_become_password | default(omit) }}"
      accept_external_apps: "{{ homebrew_cask_accept_external_apps }}"
    with_items: "{{ homebrew_cask_apps }}"
    become: yes
    become_user: "{{ ansible_user_id }}"

  - name: Install Homebrew formulae
    community.general.homebrew:
      name: "{{ item }}"
      state: present
    with_items: "{{ homebrew_installed_packages }}"
    become: yes
    become_user: "{{ ansible_user_id }}"

  - name: Remove specified Homebrew casks
    community.general.homebrew_cask:
      name: "{{ item }}"
      state: absent
    with_items: "{{ homebrew_cask_uninstalled_apps }}"
    become: yes
    become_user: "{{ ansible_user_id }}"

  - name: Remove specified Homebrew formulae
    community.general.homebrew:
      name: "{{ item }}"
      state: absent
    with_items: "{{ homebrew_uninstalled_packages }}"
    become: yes
    become_user: "{{ ansible_user_id }}"
  
  when: brew_path.rc == 0